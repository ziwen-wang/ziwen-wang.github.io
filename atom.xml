<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WZW</title>
  
  <subtitle>WZW BLOG</subtitle>
  <link href="https://ziwen-wang.github.io.git/atom.xml" rel="self"/>
  
  <link href="https://ziwen-wang.github.io.git/"/>
  <updated>2020-12-23T05:55:32.459Z</updated>
  <id>https://ziwen-wang.github.io.git/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>监听DOM变化汇总</title>
    <link href="https://ziwen-wang.github.io.git/2020/12/23/%E7%9B%91%E5%90%ACDOM%E5%8F%98%E5%8C%96%E6%B1%87%E6%80%BB/"/>
    <id>https://ziwen-wang.github.io.git/2020/12/23/%E7%9B%91%E5%90%ACDOM%E5%8F%98%E5%8C%96%E6%B1%87%E6%80%BB/</id>
    <published>2020-12-23T03:03:51.000Z</published>
    <updated>2020-12-23T05:55:32.459Z</updated>
    
    <content type="html"><![CDATA[<h2 id="监听DOM方式汇总"><a href="#监听DOM方式汇总" class="headerlink" title="监听DOM方式汇总"></a>监听DOM方式汇总</h2><h3 id="vue中监听DOM宽高变化（持续更新"><a href="#vue中监听DOM宽高变化（持续更新" class="headerlink" title="vue中监听DOM宽高变化（持续更新"></a>vue中监听DOM宽高变化（持续更新</h3><h4 id="全局element-resize-detector"><a href="#全局element-resize-detector" class="headerlink" title="全局element-resize-detector"></a>全局element-resize-detector</h4><h5 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h5><h5 id="第一步-项目根目录-安装"><a href="#第一步-项目根目录-安装" class="headerlink" title="第一步 项目根目录 安装"></a>第一步 项目根目录 安装</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i element-resize-detector -D</span><br></pre></td></tr></table></figure><h5 id="第二步-引入"><a href="#第二步-引入" class="headerlink" title="第二步 引入"></a>第二步 引入</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementResizeDetectorMarker <span class="keyword">from</span> <span class="string">&#x27;element-resize-detector&#x27;</span></span><br></pre></td></tr></table></figure><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> erd = ElementResizeDetectorMarker() <span class="comment">//注册全局或者组件引用都可</span></span><br><span class="line">erd.listenTo(DOM,<span class="function">(<span class="params">element</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//todo</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="使用iframe-模拟-window-resize"><a href="#使用iframe-模拟-window-resize" class="headerlink" title="使用iframe 模拟 window resize"></a>使用iframe 模拟 window resize</h3><h5 id="window-resize没有兼容性问题，按照这个路子，可以使用ifrmae定位到要监听的DOM，宽高100-，当容器变化时，会触发iframe的resize事件，通过contentWindow-onresize-就可以监听"><a href="#window-resize没有兼容性问题，按照这个路子，可以使用ifrmae定位到要监听的DOM，宽高100-，当容器变化时，会触发iframe的resize事件，通过contentWindow-onresize-就可以监听" class="headerlink" title="window.resize没有兼容性问题，按照这个路子，可以使用ifrmae定位到要监听的DOM，宽高100%，当容器变化时，会触发iframe的resize事件，通过contentWindow.onresize 就可以监听"></a>window.resize没有兼容性问题，按照这个路子，可以使用ifrmae定位到要监听的DOM，宽高100%，当容器变化时，会触发iframe的resize事件，通过contentWindow.onresize 就可以监听</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">let observerReisze &#x3D; (element,handle) &#x3D;&gt; &#123;</span><br><span class="line">    let iframeDom &#x3D; document.createElement(&#39;iframe&#39;)</span><br><span class="line">    iframeDom.style.cssText &#x3D; &#39;width:100%;height:100%;position:absolute;left:0;top:0;opcity:0;&#39;</span><br><span class="line">    iframeDom.onload &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">        iframeDom.contentWindow.onresize &#x3D; ()&#x3D;&gt;&#123;</span><br><span class="line">            handle()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    element.appendChild(iframeDom)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="ResizeObserver"><a href="#ResizeObserver" class="headerlink" title="ResizeObserver"></a>ResizeObserver</h3><h4 id="监听DOM宽度-变化-详细资料-https-developer-mozilla-org-en-US-docs-Web-API-ResizeObserver"><a href="#监听DOM宽度-变化-详细资料-https-developer-mozilla-org-en-US-docs-Web-API-ResizeObserver" class="headerlink" title="监听DOM宽度 变化 详细资料 https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver"></a>监听DOM宽度 变化 详细资料 <a href="https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver">https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver</a></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">let callback &#x3D;()&#x3D;&gt;&#123;</span><br><span class="line">    &#x2F;&#x2F;todo</span><br><span class="line">&#125;</span><br><span class="line">let observer &#x3D; new ResizeObserver(callback)</span><br><span class="line">observer.observe(DOM,&#123;attributes: true,characterData: true&#125;)</span><br><span class="line">&#x2F;&#x2F;observer.unbserve() 停止监听</span><br></pre></td></tr></table></figure><h3 id="MutationObserver"><a href="#MutationObserver" class="headerlink" title="MutationObserver"></a>MutationObserver</h3><h4 id="监听DOM-节点变化-详细资料-https-developer-mozilla-org-zh-CN-docs-Web-API-MutationObserver"><a href="#监听DOM-节点变化-详细资料-https-developer-mozilla-org-zh-CN-docs-Web-API-MutationObserver" class="headerlink" title="监听DOM 节点变化 详细资料 https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver"></a>监听DOM 节点变化 详细资料 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver">https://developer.mozilla.org/zh-CN/docs/Web/API/MutationObserver</a></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">let callback &#x3D; () &#x3D;&gt; &#123;</span><br><span class="line">    &#x2F;&#x2F;todo</span><br><span class="line">&#125;</span><br><span class="line">let observer &#x3D; new MutationObserver(callback)</span><br><span class="line">observer.observe(DOM,config) &#x2F;&#x2F; 开始观察目标节点</span><br><span class="line">observer.disconnect() &#x2F;&#x2F;停止观察</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;监听DOM方式汇总&quot;&gt;&lt;a href=&quot;#监听DOM方式汇总&quot; class=&quot;headerlink&quot; title=&quot;监听DOM方式汇总&quot;&gt;&lt;/a&gt;监听DOM方式汇总&lt;/h2&gt;&lt;h3 id=&quot;vue中监听DOM宽高变化（持续更新&quot;&gt;&lt;a href=&quot;#vue中监听D</summary>
      
    
    
    
    <category term="项目总结" scheme="https://ziwen-wang.github.io.git/categories/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="DOM" scheme="https://ziwen-wang.github.io.git/tags/DOM/"/>
    
  </entry>
  
  <entry>
    <title>前端屏幕适配</title>
    <link href="https://ziwen-wang.github.io.git/2020/12/20/%E5%B1%8F%E5%B9%95%E9%80%82%E9%85%8D/"/>
    <id>https://ziwen-wang.github.io.git/2020/12/20/%E5%B1%8F%E5%B9%95%E9%80%82%E9%85%8D/</id>
    <published>2020-12-20T08:01:01.000Z</published>
    <updated>2020-12-23T03:02:48.074Z</updated>
    
    <content type="html"><![CDATA[<h1 id="rem适配"><a href="#rem适配" class="headerlink" title="rem适配"></a>rem适配</h1><h3 id="一般用于移动端多机型适配-当然也可以使用在pc及大屏上，相应转化插件-推荐lib-flexible，在移动端有DPI相应适配，如果这个插件用在pc端需要改一下源码"><a href="#一般用于移动端多机型适配-当然也可以使用在pc及大屏上，相应转化插件-推荐lib-flexible，在移动端有DPI相应适配，如果这个插件用在pc端需要改一下源码" class="headerlink" title="一般用于移动端多机型适配 当然也可以使用在pc及大屏上，相应转化插件 推荐lib-flexible，在移动端有DPI相应适配，如果这个插件用在pc端需要改一下源码"></a>一般用于移动端多机型适配 当然也可以使用在pc及大屏上，相应转化插件 推荐lib-flexible，在移动端有DPI相应适配，如果这个插件用在pc端需要改一下源码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更改之后 源码为 大于540 使用540</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">refreshRem</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> width = docEl.getBoundingClientRect().width;</span><br><span class="line">        <span class="keyword">if</span> (!isMobile() &amp;&amp; width / dpr &lt; <span class="number">1920</span>) &#123;</span><br><span class="line">            width = <span class="number">1920</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(!isMobile() &amp;&amp; width / dpr &gt; <span class="number">1920</span>)&#123;</span><br><span class="line">            width = width</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> rem = width / <span class="number">10</span>;</span><br><span class="line">        docEl.style.fontSize = rem + <span class="string">&#x27;px&#x27;</span>;</span><br><span class="line">        flexible.rem = win.rem = rem;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="当然不适用插件可以使用自己计算更改html-fontsize"><a href="#当然不适用插件可以使用自己计算更改html-fontsize" class="headerlink" title="当然不适用插件可以使用自己计算更改html fontsize"></a>当然不适用插件可以使用自己计算更改html fontsize</h3><h1 id="transform缩放"><a href="#transform缩放" class="headerlink" title="transform缩放"></a>transform缩放</h1><h3 id="这个方式在看datav（阿里大屏方案）学习到的，源码为"><a href="#这个方式在看datav（阿里大屏方案）学习到的，源码为" class="headerlink" title="这个方式在看datav（阿里大屏方案）学习到的，源码为"></a>这个方式在看datav（阿里大屏方案）学习到的，源码为</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> currentWidth = <span class="built_in">document</span>.body.clientWidth</span><br><span class="line"></span><br><span class="line">dom.style.transform = <span class="string">`scale(<span class="subst">$&#123;currentWidth / allWidth&#125;</span>`</span></span><br></pre></td></tr></table></figure><hr><h3 id="这种方式在在实体项目中引用比较舒服，不需要打包时用插件把px转化单位，在大屏项目中真实使用非常舒服"><a href="#这种方式在在实体项目中引用比较舒服，不需要打包时用插件把px转化单位，在大屏项目中真实使用非常舒服" class="headerlink" title="这种方式在在实体项目中引用比较舒服，不需要打包时用插件把px转化单位，在大屏项目中真实使用非常舒服"></a>这种方式在在实体项目中引用比较舒服，不需要打包时用插件把px转化单位，在大屏项目中真实使用非常舒服</h3><h1 id="VW-适配"><a href="#VW-适配" class="headerlink" title="VW 适配"></a>VW 适配</h1><h3 id="直接使用屏幕宽度百分比进行使用，也可以使用px-然后用webpack或者编辑器插件按比例转成VM"><a href="#直接使用屏幕宽度百分比进行使用，也可以使用px-然后用webpack或者编辑器插件按比例转成VM" class="headerlink" title="直接使用屏幕宽度百分比进行使用，也可以使用px 然后用webpack或者编辑器插件按比例转成VM"></a>直接使用屏幕宽度百分比进行使用，也可以使用px 然后用webpack或者编辑器插件按比例转成VM</h3><h1 id="mediaquery"><a href="#mediaquery" class="headerlink" title="mediaquery"></a>mediaquery</h1><h3 id="多分别率进行不同分辨率适配，代码量比较大，维护不方便"><a href="#多分别率进行不同分辨率适配，代码量比较大，维护不方便" class="headerlink" title="多分别率进行不同分辨率适配，代码量比较大，维护不方便"></a>多分别率进行不同分辨率适配，代码量比较大，维护不方便</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@media(max-width:xxx) //小于 xxx的设备 css样式</span><br></pre></td></tr></table></figure><h3 id="写这篇文章主要是transform缩放实践很不错记录一下，可能大家早就知道了，我是49年入国军。"><a href="#写这篇文章主要是transform缩放实践很不错记录一下，可能大家早就知道了，我是49年入国军。" class="headerlink" title="写这篇文章主要是transform缩放实践很不错记录一下，可能大家早就知道了，我是49年入国军。"></a>写这篇文章主要是transform缩放实践很不错记录一下，可能大家早就知道了，我是49年入国军。</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;rem适配&quot;&gt;&lt;a href=&quot;#rem适配&quot; class=&quot;headerlink&quot; title=&quot;rem适配&quot;&gt;&lt;/a&gt;rem适配&lt;/h1&gt;&lt;h3 id=&quot;一般用于移动端多机型适配-当然也可以使用在pc及大屏上，相应转化插件-推荐lib-flexible，在移动</summary>
      
    
    
    
    <category term="项目总结" scheme="https://ziwen-wang.github.io.git/categories/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="适配" scheme="https://ziwen-wang.github.io.git/tags/%E9%80%82%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>聚合标签</title>
    <link href="https://ziwen-wang.github.io.git/2020/03/15/%E8%81%9A%E5%90%88%E6%A0%87%E7%AD%BE/"/>
    <id>https://ziwen-wang.github.io.git/2020/03/15/%E8%81%9A%E5%90%88%E6%A0%87%E7%AD%BE/</id>
    <published>2020-03-15T03:03:51.000Z</published>
    <updated>2021-03-22T05:58:39.078Z</updated>
    
    <content type="html"><![CDATA[<h3 id="聚合标签"><a href="#聚合标签" class="headerlink" title="聚合标签"></a>聚合标签</h3><h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><h5 id="一个界面添加多个marker，难免坐标或者DOM重叠，导致界面难看或数据不直接。"><a href="#一个界面添加多个marker，难免坐标或者DOM重叠，导致界面难看或数据不直接。" class="headerlink" title="一个界面添加多个marker，难免坐标或者DOM重叠，导致界面难看或数据不直接。"></a>一个界面添加多个marker，难免坐标或者DOM重叠，导致界面难看或数据不直接。</h5><p><img src="/images/1311615789668_.pic.jpg" alt="重叠图"></p><h4 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h4><h5 id="计算每一个marker的坐标点及宽高进行比较，两个矩形判断是否相交，如果相交生成一个合并标签，拿合并标签继续跟其他maker比较，相交就把marker数据信息push到相应合并标签内，如果不相交继续生成一个聚合标签。"><a href="#计算每一个marker的坐标点及宽高进行比较，两个矩形判断是否相交，如果相交生成一个合并标签，拿合并标签继续跟其他maker比较，相交就把marker数据信息push到相应合并标签内，如果不相交继续生成一个聚合标签。" class="headerlink" title="计算每一个marker的坐标点及宽高进行比较，两个矩形判断是否相交，如果相交生成一个合并标签，拿合并标签继续跟其他maker比较，相交就把marker数据信息push到相应合并标签内，如果不相交继续生成一个聚合标签。"></a>计算每一个marker的坐标点及宽高进行比较，两个矩形判断是否相交，如果相交生成一个合并标签，拿合并标签继续跟其他maker比较，相交就把marker数据信息push到相应合并标签内，如果不相交继续生成一个聚合标签。</h5><h4 id="矩形比较方法"><a href="#矩形比较方法" class="headerlink" title="矩形比较方法"></a>矩形比较方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 判断两个矩形是否相交或者包含</span><br><span class="line"> *&#x2F;</span><br><span class="line">public static isContainOrIntersect(leftRectangle:RectangleData,rightRectangle:RectangleData)&#123;</span><br><span class="line">    if (leftRectangle.x&gt;rightRectangle.x) &#123;</span><br><span class="line">        let midRectangle&#x3D;leftRectangle;</span><br><span class="line">        leftRectangle&#x3D;rightRectangle;</span><br><span class="line">        rightRectangle&#x3D;midRectangle;</span><br><span class="line">    &#125;</span><br><span class="line">    if (Math.abs(leftRectangle.x-rightRectangle.x)&lt;leftRectangle.width) &#123;</span><br><span class="line">        let distance&#x3D;Math.abs(leftRectangle.y-rightRectangle.y);</span><br><span class="line">        if (leftRectangle.y&lt;rightRectangle.y) &#123;</span><br><span class="line">            if (distance&lt;leftRectangle.height) &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                return false;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            if (distance&lt;rightRectangle.height) &#123;</span><br><span class="line">                return true;</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                return false;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="计算两个矩形合并后范围"><a href="#计算两个矩形合并后范围" class="headerlink" title="计算两个矩形合并后范围"></a>计算两个矩形合并后范围</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * 合并范围</span><br><span class="line"> * @param leftRectangle </span><br><span class="line"> * @param rightRectangle </span><br><span class="line"> *&#x2F;</span><br><span class="line">public static unionRectangle(leftRectangle:RectangleData,rightRectangle:RectangleData) :RectangleData&#123;</span><br><span class="line">    let result :RectangleData &#x3D; &#123; x:0,y:0,width:0,height:0 &#125;</span><br><span class="line">    result.x&#x3D;Math.min(leftRectangle.x,rightRectangle.x);</span><br><span class="line">    result.y&#x3D;Math.min(leftRectangle.y,rightRectangle.y);</span><br><span class="line">    result.width&#x3D;Math.max(leftRectangle.x+leftRectangle.width-result.x,rightRectangle.x+rightRectangle.width-result.x);</span><br><span class="line">    result.height&#x3D;Math.max(leftRectangle.y+leftRectangle.height-result.y,rightRectangle.y+rightRectangle.height-result.y);</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h4><p><img src="/images/1321615790504_.pic.jpg" alt="实现图"></p><h4 id="实现后问题"><a href="#实现后问题" class="headerlink" title="实现后问题"></a>实现后问题</h4><h5 id="因为在三维场景中-相机位置改变对应屏幕坐标改变，位置关系不正确，及业务需求标签可以给用户自定义。"><a href="#因为在三维场景中-相机位置改变对应屏幕坐标改变，位置关系不正确，及业务需求标签可以给用户自定义。" class="headerlink" title="因为在三维场景中 相机位置改变对应屏幕坐标改变，位置关系不正确，及业务需求标签可以给用户自定义。"></a>因为在三维场景中 相机位置改变对应屏幕坐标改变，位置关系不正确，及业务需求标签可以给用户自定义。</h5><h5 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h5><h6 id="1、orbitcontrol-change"><a href="#1、orbitcontrol-change" class="headerlink" title="1、orbitcontrol.change"></a>1、orbitcontrol.change</h6><h6 id="监听进行实时计算。每一次擦除之前DOM-从新生成新DOM"><a href="#监听进行实时计算。每一次擦除之前DOM-从新生成新DOM" class="headerlink" title="监听进行实时计算。每一次擦除之前DOM 从新生成新DOM"></a>监听进行实时计算。每一次擦除之前DOM 从新生成新DOM</h6><h6 id="2、marker没有聚合显示之前marker样式"><a href="#2、marker没有聚合显示之前marker样式" class="headerlink" title="2、marker没有聚合显示之前marker样式"></a>2、marker没有聚合显示之前marker样式</h6><h6 id="在聚合标签DOM中为null-并不隐藏之前markerdom即可"><a href="#在聚合标签DOM中为null-并不隐藏之前markerdom即可" class="headerlink" title="在聚合标签DOM中为null 并不隐藏之前markerdom即可"></a>在聚合标签DOM中为null 并不隐藏之前markerdom即可</h6><h6 id="3、标签自定义"><a href="#3、标签自定义" class="headerlink" title="3、标签自定义"></a>3、标签自定义</h6><h6 id="原本设想的是把对应DOM存入聚合标签内，但是每一次擦除，根据这块增加一个数据变化操作dom优化，orbtcontrolchange进行擦除DOM操作前，增加比对上一次聚合数据内的marker-length判断及maker每一项的id是否相等，如果相等只更新dom坐标不进行擦除，不等进行擦除操作，并在EventEmitter中emit告诉用户现在聚合标签经计算有变更把相应的聚合数据返回，数据中包括dom，及marker划分数据-让用户自行修改。"><a href="#原本设想的是把对应DOM存入聚合标签内，但是每一次擦除，根据这块增加一个数据变化操作dom优化，orbtcontrolchange进行擦除DOM操作前，增加比对上一次聚合数据内的marker-length判断及maker每一项的id是否相等，如果相等只更新dom坐标不进行擦除，不等进行擦除操作，并在EventEmitter中emit告诉用户现在聚合标签经计算有变更把相应的聚合数据返回，数据中包括dom，及marker划分数据-让用户自行修改。" class="headerlink" title="原本设想的是把对应DOM存入聚合标签内，但是每一次擦除，根据这块增加一个数据变化操作dom优化，orbtcontrolchange进行擦除DOM操作前，增加比对上一次聚合数据内的marker.length判断及maker每一项的id是否相等，如果相等只更新dom坐标不进行擦除，不等进行擦除操作，并在EventEmitter中emit告诉用户现在聚合标签经计算有变更把相应的聚合数据返回，数据中包括dom，及marker划分数据 让用户自行修改。"></a>原本设想的是把对应DOM存入聚合标签内，但是每一次擦除，根据这块增加一个数据变化操作dom优化，orbtcontrolchange进行擦除DOM操作前，增加比对上一次聚合数据内的marker.length判断及maker每一项的id是否相等，如果相等只更新dom坐标不进行擦除，不等进行擦除操作，并在EventEmitter中emit告诉用户现在聚合标签经计算有变更把相应的聚合数据返回，数据中包括dom，及marker划分数据 让用户自行修改。</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">server.DOMEmitter.on(&#39;update&#39;,(cluster)&#x3D;&gt;&#123;</span><br><span class="line">        cluster.forEach(c&#x3D;&gt;&#123;</span><br><span class="line">            if(c.dom)&#123;</span><br><span class="line">                c.dom.innerHTML &#x3D; &#96;</span><br><span class="line">                    &lt;div class&#x3D;&#39;test&#39;&gt;</span><br><span class="line">                        &lt;p&gt; 包含数据 $&#123;c.points.length&#125; 条&lt;&#x2F;p&gt;</span><br><span class="line">                        &lt;p&gt; xxxxxxxx&lt;&#x2F;p&gt;</span><br><span class="line">                    &lt;&#x2F;div&gt;</span><br><span class="line">                &#96;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h4 id="实现前"><a href="#实现前" class="headerlink" title="实现前"></a>实现前</h4><iframe height=310 width=100% src="/images/Kapture2021-03-15-1.gif"></iframe><h4 id="实现后"><a href="#实现后" class="headerlink" title="实现后"></a>实现后</h4><iframe height=310 width=100% src="/images/Kapture2021-03-19-2.gif"></iframe><h4 id="自定义聚合标签"><a href="#自定义聚合标签" class="headerlink" title="自定义聚合标签"></a>自定义聚合标签</h4><iframe height=310 width=100% src="/images/Kapture2021-03-19-3.gif"></iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;聚合标签&quot;&gt;&lt;a href=&quot;#聚合标签&quot; class=&quot;headerlink&quot; title=&quot;聚合标签&quot;&gt;&lt;/a&gt;聚合标签&lt;/h3&gt;&lt;h4 id=&quot;使用场景&quot;&gt;&lt;a href=&quot;#使用场景&quot; class=&quot;headerlink&quot; title=&quot;使用场景&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="项目总结" scheme="https://ziwen-wang.github.io.git/categories/%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="DOM" scheme="https://ziwen-wang.github.io.git/tags/DOM/"/>
    
  </entry>
  
</feed>
